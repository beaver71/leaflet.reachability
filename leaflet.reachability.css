/* Button to expand/collapse the reachability control UI when in a toggleable state (collapsed == true) */
.reachability-control-toggle-button
{
    font-size: 18px;
    font-weight: bold;
}
.leaflet-touch .reachability-control-toggle-button
{
    font-size: 22px;
}
.leaflet-bar a.reachability-control-toggle-button  /* We need to specify the ".leaflet-bar a" class and selector specifically for the following in order to override the default Leaflet control styles */
{
    min-width: 100%;    /* makes the button fill the width of the UI container when in expanded state */
}
.leaflet-bar a.reachability-control-toggle-button[aria-expanded="false"],
.leaflet-bar a.reachability-control-toggle-button[aria-expanded="false"]:hover
{
    border-bottom: none;                /* removes the border when the UI is collapsed - even though the UI is is hidden, the button is still the 'first-child' element in the control so Leaflet adds a border */
    border-bottom-left-radius: 4px;     /* for a similar reason, as it's not the last child... */
    border-bottom-right-radius: 4px;    /* ...the bottom corners are not rounded by default */
}

/* The container for the reachability control user interface */
.reachability-control-settings-container
{
    background: #fff;
    padding: 10px 6px 6px 6px;
    border-radius: 4px;
}
a.reachability-control-toggle-button + div.reachability-control-settings-container /* Remove the rounded corners at the top of the UI if the show/hide button is above it, i.e. collapsed = true */
{
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
}

/* General class for styling the 'button' controls in the user interface container */
.reachability-control-settings-button
{
    color: #505050;
    background-color: transparent;
    width: 42px;
    height: 42px;
    border-radius: 5px;
    margin-right: 10px;
    padding: 0;
    border: 2px solid #757575;
}
.reachability-control-settings-button:last-child
{
    margin-right: 0px;
}
.reachability-control-settings-button, .reachability-control-toggle-button
{
    cursor: pointer;
}
.reachability-control-settings-button:hover
{
    color: #0359A0;
    border-color: #0073d4;
}
.reachability-control-settings-button:disabled
{
    color: #696969;
    background-color: #f0f0f0;
    border-color: #ccc;
    cursor: default;
}

/* Dividers between the different UI sections */
.reachability-control-settings-block-container
{
    display: block;
    margin-bottom: 10px;
    padding-bottom: 10px;
    border-bottom: 1px dotted #757575;
}
.reachability-control-settings-block-container span /* This is the sub-container for the calculation method buttons: distance and time */
{
    display: inline-block;
}

/* General class for highlighting the selected 'button' controls in the user interface container and the collapsed control if either the draw or delete mode is active */
.reachability-control-active,
.leaflet-touch .reachability-control-active,
.reachability-control-active a,
.leaflet-touch .reachability-control-active a,
[aria-pressed="true"].reachability-control-settings-button, /* This is specifically for the draw and delete buttons */
[aria-checked="true"].reachability-control-settings-button  /* This is specifically for the radio-style buttons: distance, time and travel modes */
{
    border-color: #0073d4;
    color: #0359A0;
    box-shadow: 0 1px 5px rgba(0,115,212,0.65);
}

/* If something has gone wrong e.g. bad call to the API etc. */
.reachability-control-error, .leaflet-touch .reachability-control-error
{
    border-color: red;
    color: red;
    box-shadow: 0 1px 5px rgba(255,0,0,0.65);
}

/* Container for the range titles - applies to both time and distance */
.reachability-control-range-title
{
    font-weight: bold;
    margin: 0 5px 5px 0;
    display: inline-block;  /* change to 'block' if you want more space for the title */
}

.reachability-control-show-range-interval
{
    padding-left: 5px;
}

/* Used to hide elements of the control as necessary, e.g. when it is in its collapsed state etc. */
.reachability-control-hide-content
{
    display: none;
}
